/*
 * This file is generated by jOOQ.
 */
package com.yg.gqlwfdl.dataaccess.db.tables;


import com.yg.gqlwfdl.dataaccess.db.Indexes;
import com.yg.gqlwfdl.dataaccess.db.Keys;
import com.yg.gqlwfdl.dataaccess.db.Public;
import com.yg.gqlwfdl.dataaccess.db.tables.records.OrderLineRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderLine extends TableImpl<OrderLineRecord> {

    private static final long serialVersionUID = 1011134336;

    /**
     * The reference instance of <code>public.order_line</code>
     */
    public static final OrderLine ORDER_LINE = new OrderLine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderLineRecord> getRecordType() {
        return OrderLineRecord.class;
    }

    /**
     * The column <code>public.order_line.id</code>.
     */
    public final TableField<OrderLineRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('order_line_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.order_line.order</code>.
     */
    public final TableField<OrderLineRecord, Long> ORDER = createField("order", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.order_line.product</code>.
     */
    public final TableField<OrderLineRecord, Long> PRODUCT = createField("product", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.order_line.price</code>.
     */
    public final TableField<OrderLineRecord, Double> PRICE = createField("price", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>public.order_line</code> table reference
     */
    public OrderLine() {
        this(DSL.name("order_line"), null);
    }

    /**
     * Create an aliased <code>public.order_line</code> table reference
     */
    public OrderLine(String alias) {
        this(DSL.name(alias), ORDER_LINE);
    }

    /**
     * Create an aliased <code>public.order_line</code> table reference
     */
    public OrderLine(Name alias) {
        this(alias, ORDER_LINE);
    }

    private OrderLine(Name alias, Table<OrderLineRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderLine(Name alias, Table<OrderLineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> OrderLine(Table<O> child, ForeignKey<O, OrderLineRecord> key) {
        super(child, key, ORDER_LINE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ORDER_LINE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrderLineRecord, Long> getIdentity() {
        return Keys.IDENTITY_ORDER_LINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderLineRecord> getPrimaryKey() {
        return Keys.ORDER_LINE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderLineRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderLineRecord>>asList(Keys.ORDER_LINE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderLine as(String alias) {
        return new OrderLine(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderLine as(Name alias) {
        return new OrderLine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderLine rename(String name) {
        return new OrderLine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderLine rename(Name name) {
        return new OrderLine(name, null);
    }
}
