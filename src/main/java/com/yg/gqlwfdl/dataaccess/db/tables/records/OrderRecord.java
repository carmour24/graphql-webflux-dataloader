/*
 * This file is generated by jOOQ.
 */
package com.yg.gqlwfdl.dataaccess.db.tables.records;


import com.yg.gqlwfdl.dataaccess.db.tables.Order;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record4<Long, Long, OffsetDateTime, String> {

    private static final long serialVersionUID = 720748274;

    /**
     * Setter for <code>public.order.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.order.customer</code>.
     */
    public void setCustomer(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order.customer</code>.
     */
    public Long getCustomer() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.order.date</code>.
     */
    public void setDate(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order.date</code>.
     */
    public OffsetDateTime getDate() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.order.delivery_address</code>.
     */
    public void setDeliveryAddress(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.order.delivery_address</code>.
     */
    public String getDeliveryAddress() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, OffsetDateTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, OffsetDateTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Order.ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Order.ORDER.CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field3() {
        return Order.ORDER.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Order.ORDER.DELIVERY_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component3() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDeliveryAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value3() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDeliveryAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value2(Long value) {
        setCustomer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value3(OffsetDateTime value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value4(String value) {
        setDeliveryAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord values(Long value1, Long value2, OffsetDateTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Order.ORDER);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(Long id, Long customer, OffsetDateTime date, String deliveryAddress) {
        super(Order.ORDER);

        set(0, id);
        set(1, customer);
        set(2, date);
        set(3, deliveryAddress);
    }
}
